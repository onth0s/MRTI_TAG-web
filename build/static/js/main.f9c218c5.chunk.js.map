{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","isTextAreaDisabled","setIsTextAreaDisabled","registry","setRegistry","tag","description","tags","handleSubmit","e","preventDefault","trim","parseTextArea","temp","document","querySelector","scrollTop","scrollHeight","text","arr","split","arr2","i","length","push","className","onClick","overlay","style","animation","addEventListener","visibility","map","val","onSubmit","name","id","value","onChange","target","onKeyPress","key","shiftKey","spellCheck","autoFocus","disabled","focus","ReactDOM","render","getElementById"],"mappings":"uLA0GeA,MAtGf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACJC,EADI,KACGC,EADH,OAEyCF,oBAAS,GAFlD,mBAEJG,EAFI,KAEgBC,EAFhB,OAIqBJ,mBAAS,IAJ9B,mBAIJK,EAJI,KAIMC,EAJN,OAKaN,mBAAS,CAAC,CAACO,IAAK,WAAYC,YAAc,gDALvD,mBAKJC,EALI,aAMeT,mBAAS,CAAC,CAACO,IAAK,WAAYC,YAAc,iDANzD,mBAQLE,GARK,UAQU,SAACC,GAClBA,EAAEC,iBAEmB,KAAjBX,EAAMY,QACNP,EAAY,GAAD,mBAAKD,GAAL,CAAeS,EAAcb,MAG5C,IAAMc,EAAOC,SAASC,cAAc,gBACpCF,EAAKG,UAAYH,EAAKI,aAEtBjB,EAAS,MAGPY,EAAgB,SAACM,GAInB,IAHA,IAAIC,EAAMD,EAAKP,OAAOS,MAAM,MAExBC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IACb,KAAXH,EAAIG,GACJD,EAAKG,KAAK,sBAASF,IAEnBD,EAAKG,KAAK,8BAAcL,EAAIG,IAARA,IAM5B,OAAQD,GAGZ,OACI,sBAAKI,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,UAAf,UACI,6FACA,mBAAGA,UAAU,eAAeC,QAAS,WACjC,IAAMC,EAAUb,SAASC,cAAc,YACvCY,EAAQC,MAAMC,UAAY,gBAC1BF,EAAQG,iBAAiB,gBAAgB,WACrCH,EAAQC,MAAMG,WAAa,SAC3BJ,EAAQC,MAAMC,UAAY,UAE9B3B,GAAsB,SAI9B,qBAAKuB,UAAU,SAAf,SACKtB,EAAS6B,KAAI,SAACC,EAAKX,GAAN,OACV,qBAAKG,UAAU,MAAMC,QAAS,SAACjB,KAA/B,SAMKwB,GADGX,QAMhB,sBAAKG,UAAU,SAAf,UACI,sCAEA,qBAAKA,UAAU,OAAf,SAKKlB,EAAKyB,KAAI,SAACC,EAAKX,GAAN,OACN,8BACKW,EAAI5B,KADCiB,cAQ1B,uBAAMY,SAAU1B,EAAhB,UACI,0BAAU2B,KAAK,GAAGC,GAAG,GAAGC,MAAOtC,EAAOuC,SAAU,SAAC7B,GAC7CT,EAASS,EAAE8B,OAAOF,QACnBG,WAAY,SAAC/B,GACE,UAAVA,EAAEgC,KAAoBhC,EAAEiC,UACxBlC,EAAaC,IAElBkC,WAAW,QAAQC,WAAS,EAACC,SAAU5C,IAE1C,wBAAQyB,QAAS,SAACjB,GACdD,EAAaC,GACbK,SAASC,cAAc,4BAA4B+B,SAFvD,gC,MC5FhBC,IAASC,OACL,cAAC,EAAD,IACAlC,SAASmC,eAAe,W","file":"static/js/main.f9c218c5.chunk.js","sourcesContent":["import { useState } from 'react';\n\nlet counter = 0;\n\nfunction App() {\n    const [input, setInput] = useState('');\n    const [isTextAreaDisabled, setIsTextAreaDisabled] = useState(false);\n \n    const [registry, setRegistry] = useState([]);\n    const [tags, setTags] = useState([{tag: 'tag_name', description : 'This is the description for this test tag.'}]);\n    const [links, setLinks] = useState([{tag: 'tag_name', description : 'This is the description for this test tag.'}]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (input.trim() !== \"\") {\n            setRegistry([...registry, parseTextArea(input)]);\n        }\n        \n        const temp = document.querySelector('.top .output');\n        temp.scrollTop = temp.scrollHeight;\n\n        setInput('');\n    }\n    \n    const parseTextArea = (text) => {\n        let arr = text.trim().split('\\n');\n\n        let arr2 = [];\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i] === \"\") {\n                arr2.push(<br key={i}/>);\n            } else {\n                arr2.push(<pre key={i}>{arr[i]}</pre>);\n            }         \n        }\n        // console.log(Math.floor(Math.random() * 10000));\n        counter++\n\n        return (arr2);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"top\">\n                <div className=\"overlay\">\n                    <p>A message that will be displayed when you fuck something up.</p>\n                    <i className=\"fas fa-times\" onClick={() => {\n                        const overlay = document.querySelector('.overlay');\n                        overlay.style.animation = 'fade-out 0.4s';\n                        overlay.addEventListener(\"animationend\", () => {\n                            overlay.style.visibility = 'hidden';\n                            overlay.style.animation = 'none';\n                        });\n                        setIsTextAreaDisabled(false);\n                    }}></i>\n                </div>\n\n                <div className=\"output\">\n                    {registry.map((val, i) => (\n                        <div className=\"reg\" onClick={(e) => {\n\n                            \n                            // TODO \n                        \n                        }} key={i}>\n                            {val}\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"column\">\n                    <h2>TAGS</h2>\n\n                    <div className=\"tags\">\n                        {/* <div>palabra</div>\n                        <div>idea</div>\n                        <div>razón</div>\n                        <div>pensar</div> */}\n                        {tags.map((val, i) => (\n                            <div key={i}>\n                                {val.tag}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            <form onSubmit={handleSubmit}>\n                <textarea name=\"\" id=\"\" value={input} onChange={(e) => {\n                    setInput(e.target.value);\n                }} onKeyPress={(e) => {\n                    if (e.key === \"Enter\" && !e.shiftKey) {\n                        handleSubmit(e);\n                    }\n                }} spellCheck=\"false\" autoFocus disabled={isTextAreaDisabled}></textarea>\n\n                <button onClick={(e) => {\n                    handleSubmit(e);\n                    document.querySelector('.container form textarea').focus();\n                }}>PUSH ↑</button>\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}